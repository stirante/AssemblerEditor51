ACALL=Absolute Call
ADD=Add Accumulator
ADDC=Add Accumulator (With Carry)
AJMP=Absolute Jump
ANL=Bitwise AND
CJNE=Compare and Jump if Not Equal
CLR=Clear Register
CPL=Complement Register
DA=Decimal Adjust
DEC=Decrement Register
DIV=Divide Accumulator by B
DJNZ=Decrement Register and Jump if Not Zero
INC=Increment Register
JB=Jump if Bit Set
JBC=Jump if Bit Set and Clear Bit
JC=Jump if Carry Set
JMP=Jump to Address
JNB=Jump if Bit Not Set
JNC=Jump if Carry Not Set
JNZ=Jump if Accumulator Not Zero
JZ=Jump if Accumulator Zero
LCALL=Long Call
LJMP=Long Jump
MOV=Move Memory
MOVC=Move Code Memory
MOVX=Move Extended Memory
MUL=Multiply Accumulator by B
NOP=No Operation
ORL=Bitwise OR
POP=Pop Value From Stack
PUSH=Push Value Onto Stack
RET=Return From Subroutine
RETI=Return From Interrupt
RL=Rotate Accumulator Left
RLC=Rotate Accumulator Left Through Carry
RR=Rotate Accumulator Right
RRC=Rotate Accumulator Right Through Carry
SETB=Set Bit
SJMP=Short Jump
SUBB=Subtract From Accumulator With Borrow
SWAP=Swap Accumulator Nibbles
XCH=Exchange Bytes
XCHD=Exchange Digits
XRL=Bitwise Exclusive OR
PCON=Power Management Register
PSW=Processor Status Word
DPH=Data pointer registers (High)
DPL=Data pointer registers (Low)
IP=Interrupt priority
IE=Interrupt enable
SBUF=Serial Input/Output buffer
SCON=Serial communication control
TCON=Timer control
TH0=Timer 0 counter (High)
TL0=Timer 0 counter (Low)
TH1=Timer 1 counter (High)
TL1=Timer 1 counter (Low)
TMOD=Timer mode select
A=The most important of all special function registers. The Accumulator (sometimes referred to as Register A also) holds the result of most of arithmetic and logic operations. ACC is usually accessed by direct addressing and its physical address is E0H. Accumulator is both byte and bit addressable. To access the first bit (i.e bit 0) or to access accumulator as a single byte (all 8 bits at once), you may use the same physical address E0H. Now if you want to access the second bit (i.e bit 1), you may use E1H and for third bit E2H and so on.
B=The major purpose of this register is in executing multiplication and division.
#specyficzne dla DSM-51
P1.0=COM2 wyjscie
P3.0=(RxD) COM1 wejscie
P1.1=sterownik przerwan
P3.1=(TxD) COM1 wyjscie
P1.2=wyjscie izolowane O1
P3.2=(INT0) sterownik przerwan - COM2 wejscie
P1.3=wyjscie izolowane O2
P3.3=(INT1) sterownik przerwan
P1.4=watchdog
P3.4=(T0) wejscie izolowane I1
P1.5=brzeczyk BUZZER
P3.5=(T1) klawiatura
P1.6=wyswietlacz 7-segmentowy
P1.7=dioda swiecaca TEST
